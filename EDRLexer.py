# Generated from EDR.g by ANTLR 4.12.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,24,351,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,1,0,1,0,1,1,1,1,1,2,1,
        2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,
        10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,
        12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,
        13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,
        13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,
        13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,
        13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,3,13,144,8,13,1,13,1,13,1,
        13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,
        13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,
        13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,
        13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,
        13,3,13,201,8,13,1,13,3,13,204,8,13,1,14,4,14,207,8,14,11,14,12,
        14,208,1,15,5,15,212,8,15,10,15,12,15,215,9,15,1,15,4,15,218,8,15,
        11,15,12,15,219,1,15,5,15,223,8,15,10,15,12,15,226,9,15,1,15,5,15,
        229,8,15,10,15,12,15,232,9,15,1,15,1,15,1,15,1,15,1,15,1,15,5,15,
        240,8,15,10,15,12,15,243,9,15,1,15,5,15,246,8,15,10,15,12,15,249,
        9,15,1,15,1,15,1,15,1,15,1,15,1,15,5,15,257,8,15,10,15,12,15,260,
        9,15,3,15,262,8,15,1,16,1,16,1,17,4,17,267,8,17,11,17,12,17,268,
        1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,3,18,280,8,18,1,19,
        1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,3,19,291,8,19,1,20,1,20,
        1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,
        1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,
        1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,
        1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,4,23,
        346,8,23,11,23,12,23,347,1,23,1,23,0,0,24,1,1,3,2,5,3,7,4,9,5,11,
        6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,
        35,18,37,19,39,20,41,21,43,22,45,23,47,24,1,0,7,2,0,65,90,97,122,
        2,0,9,9,32,32,1,0,32,32,2,0,10,10,13,13,2,0,44,44,46,46,1,0,48,57,
        3,0,73,73,86,86,88,88,413,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,
        7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,
        1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,
        1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,
        1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,
        1,0,0,0,1,49,1,0,0,0,3,51,1,0,0,0,5,53,1,0,0,0,7,55,1,0,0,0,9,57,
        1,0,0,0,11,59,1,0,0,0,13,61,1,0,0,0,15,63,1,0,0,0,17,65,1,0,0,0,
        19,67,1,0,0,0,21,69,1,0,0,0,23,76,1,0,0,0,25,83,1,0,0,0,27,203,1,
        0,0,0,29,206,1,0,0,0,31,261,1,0,0,0,33,263,1,0,0,0,35,266,1,0,0,
        0,37,279,1,0,0,0,39,290,1,0,0,0,41,292,1,0,0,0,43,302,1,0,0,0,45,
        312,1,0,0,0,47,333,1,0,0,0,49,50,5,40,0,0,50,2,1,0,0,0,51,52,5,41,
        0,0,52,4,1,0,0,0,53,54,5,91,0,0,54,6,1,0,0,0,55,56,5,93,0,0,56,8,
        1,0,0,0,57,58,5,123,0,0,58,10,1,0,0,0,59,60,5,125,0,0,60,12,1,0,
        0,0,61,62,5,58,0,0,62,14,1,0,0,0,63,64,5,63,0,0,64,16,1,0,0,0,65,
        66,5,45,0,0,66,18,1,0,0,0,67,68,5,43,0,0,68,20,1,0,0,0,69,70,5,38,
        0,0,70,71,5,35,0,0,71,72,5,56,0,0,72,73,5,49,0,0,73,74,5,56,0,0,
        74,75,5,59,0,0,75,22,1,0,0,0,76,77,5,38,0,0,77,78,5,35,0,0,78,79,
        5,55,0,0,79,80,5,55,0,0,80,81,5,48,0,0,81,82,5,59,0,0,82,24,1,0,
        0,0,83,84,5,38,0,0,84,85,5,35,0,0,85,86,5,56,0,0,86,87,5,48,0,0,
        87,88,5,51,0,0,88,89,5,59,0,0,89,26,1,0,0,0,90,204,7,0,0,0,91,92,
        5,38,0,0,92,93,5,35,0,0,93,94,5,57,0,0,94,143,1,0,0,0,95,96,5,49,
        0,0,96,144,5,51,0,0,97,98,5,49,0,0,98,144,5,52,0,0,99,100,5,49,0,
        0,100,144,5,53,0,0,101,102,5,49,0,0,102,144,5,54,0,0,103,104,5,49,
        0,0,104,144,5,55,0,0,105,106,5,49,0,0,106,144,5,56,0,0,107,108,5,
        49,0,0,108,144,5,57,0,0,109,110,5,50,0,0,110,144,5,48,0,0,111,112,
        5,50,0,0,112,144,5,49,0,0,113,114,5,50,0,0,114,144,5,50,0,0,115,
        116,5,50,0,0,116,144,5,51,0,0,117,118,5,50,0,0,118,144,5,52,0,0,
        119,120,5,50,0,0,120,144,5,53,0,0,121,122,5,50,0,0,122,144,5,54,
        0,0,123,124,5,50,0,0,124,144,5,55,0,0,125,126,5,50,0,0,126,144,5,
        56,0,0,127,128,5,50,0,0,128,144,5,57,0,0,129,130,5,51,0,0,130,144,
        5,49,0,0,131,132,5,51,0,0,132,144,5,50,0,0,133,134,5,51,0,0,134,
        144,5,51,0,0,135,136,5,51,0,0,136,144,5,52,0,0,137,138,5,51,0,0,
        138,144,5,53,0,0,139,140,5,51,0,0,140,144,5,54,0,0,141,142,5,51,
        0,0,142,144,5,55,0,0,143,95,1,0,0,0,143,97,1,0,0,0,143,99,1,0,0,
        0,143,101,1,0,0,0,143,103,1,0,0,0,143,105,1,0,0,0,143,107,1,0,0,
        0,143,109,1,0,0,0,143,111,1,0,0,0,143,113,1,0,0,0,143,115,1,0,0,
        0,143,117,1,0,0,0,143,119,1,0,0,0,143,121,1,0,0,0,143,123,1,0,0,
        0,143,125,1,0,0,0,143,127,1,0,0,0,143,129,1,0,0,0,143,131,1,0,0,
        0,143,133,1,0,0,0,143,135,1,0,0,0,143,137,1,0,0,0,143,139,1,0,0,
        0,143,141,1,0,0,0,144,145,1,0,0,0,145,204,5,59,0,0,146,147,5,38,
        0,0,147,148,5,35,0,0,148,149,5,57,0,0,149,200,1,0,0,0,150,151,5,
        52,0,0,151,201,5,53,0,0,152,153,5,52,0,0,153,201,5,54,0,0,154,155,
        5,52,0,0,155,201,5,55,0,0,156,157,5,52,0,0,157,201,5,56,0,0,158,
        159,5,52,0,0,159,201,5,57,0,0,160,161,5,53,0,0,161,201,5,48,0,0,
        162,163,5,53,0,0,163,201,5,49,0,0,164,165,5,53,0,0,165,201,5,50,
        0,0,166,167,5,53,0,0,167,201,5,51,0,0,168,169,5,53,0,0,169,201,5,
        52,0,0,170,171,5,53,0,0,171,201,5,53,0,0,172,173,5,53,0,0,173,201,
        5,54,0,0,174,175,5,53,0,0,175,201,5,55,0,0,176,177,5,53,0,0,177,
        201,5,56,0,0,178,179,5,53,0,0,179,201,5,57,0,0,180,181,5,54,0,0,
        181,201,5,48,0,0,182,183,5,54,0,0,183,201,5,49,0,0,184,185,5,54,
        0,0,185,201,5,50,0,0,186,187,5,54,0,0,187,201,5,51,0,0,188,189,5,
        54,0,0,189,201,5,52,0,0,190,191,5,54,0,0,191,201,5,53,0,0,192,193,
        5,54,0,0,193,201,5,54,0,0,194,195,5,54,0,0,195,201,5,55,0,0,196,
        197,5,54,0,0,197,201,5,56,0,0,198,199,5,54,0,0,199,201,5,57,0,0,
        200,150,1,0,0,0,200,152,1,0,0,0,200,154,1,0,0,0,200,156,1,0,0,0,
        200,158,1,0,0,0,200,160,1,0,0,0,200,162,1,0,0,0,200,164,1,0,0,0,
        200,166,1,0,0,0,200,168,1,0,0,0,200,170,1,0,0,0,200,172,1,0,0,0,
        200,174,1,0,0,0,200,176,1,0,0,0,200,178,1,0,0,0,200,180,1,0,0,0,
        200,182,1,0,0,0,200,184,1,0,0,0,200,186,1,0,0,0,200,188,1,0,0,0,
        200,190,1,0,0,0,200,192,1,0,0,0,200,194,1,0,0,0,200,196,1,0,0,0,
        200,198,1,0,0,0,201,202,1,0,0,0,202,204,5,59,0,0,203,90,1,0,0,0,
        203,91,1,0,0,0,203,146,1,0,0,0,204,28,1,0,0,0,205,207,7,1,0,0,206,
        205,1,0,0,0,207,208,1,0,0,0,208,206,1,0,0,0,208,209,1,0,0,0,209,
        30,1,0,0,0,210,212,7,2,0,0,211,210,1,0,0,0,212,215,1,0,0,0,213,211,
        1,0,0,0,213,214,1,0,0,0,214,217,1,0,0,0,215,213,1,0,0,0,216,218,
        7,3,0,0,217,216,1,0,0,0,218,219,1,0,0,0,219,217,1,0,0,0,219,220,
        1,0,0,0,220,224,1,0,0,0,221,223,7,2,0,0,222,221,1,0,0,0,223,226,
        1,0,0,0,224,222,1,0,0,0,224,225,1,0,0,0,225,262,1,0,0,0,226,224,
        1,0,0,0,227,229,7,2,0,0,228,227,1,0,0,0,229,232,1,0,0,0,230,228,
        1,0,0,0,230,231,1,0,0,0,231,233,1,0,0,0,232,230,1,0,0,0,233,234,
        5,60,0,0,234,235,5,66,0,0,235,236,5,82,0,0,236,237,5,62,0,0,237,
        241,1,0,0,0,238,240,7,2,0,0,239,238,1,0,0,0,240,243,1,0,0,0,241,
        239,1,0,0,0,241,242,1,0,0,0,242,262,1,0,0,0,243,241,1,0,0,0,244,
        246,7,2,0,0,245,244,1,0,0,0,246,249,1,0,0,0,247,245,1,0,0,0,247,
        248,1,0,0,0,248,250,1,0,0,0,249,247,1,0,0,0,250,251,5,60,0,0,251,
        252,5,98,0,0,252,253,5,114,0,0,253,254,5,62,0,0,254,258,1,0,0,0,
        255,257,7,2,0,0,256,255,1,0,0,0,257,260,1,0,0,0,258,256,1,0,0,0,
        258,259,1,0,0,0,259,262,1,0,0,0,260,258,1,0,0,0,261,213,1,0,0,0,
        261,230,1,0,0,0,261,247,1,0,0,0,262,32,1,0,0,0,263,264,7,4,0,0,264,
        34,1,0,0,0,265,267,7,5,0,0,266,265,1,0,0,0,267,268,1,0,0,0,268,266,
        1,0,0,0,268,269,1,0,0,0,269,36,1,0,0,0,270,271,5,38,0,0,271,272,
        5,35,0,0,272,273,5,49,0,0,273,274,5,50,0,0,274,275,5,50,0,0,275,
        276,5,57,0,0,276,277,5,54,0,0,277,280,5,59,0,0,278,280,5,60,0,0,
        279,270,1,0,0,0,279,278,1,0,0,0,280,38,1,0,0,0,281,282,5,38,0,0,
        282,283,5,35,0,0,283,284,5,49,0,0,284,285,5,50,0,0,285,286,5,50,
        0,0,286,287,5,57,0,0,287,288,5,55,0,0,288,291,5,59,0,0,289,291,5,
        62,0,0,290,281,1,0,0,0,290,289,1,0,0,0,291,40,1,0,0,0,292,293,3,
        37,18,0,293,294,5,58,0,0,294,295,5,118,0,0,295,296,5,97,0,0,296,
        297,5,99,0,0,297,298,5,97,0,0,298,299,5,116,0,0,299,300,1,0,0,0,
        300,301,3,39,19,0,301,42,1,0,0,0,302,303,3,37,18,0,303,304,5,58,
        0,0,304,305,5,105,0,0,305,306,5,97,0,0,306,307,5,110,0,0,307,308,
        5,117,0,0,308,309,5,97,0,0,309,310,1,0,0,0,310,311,3,39,19,0,311,
        44,1,0,0,0,312,313,3,37,18,0,313,314,5,58,0,0,314,315,5,97,0,0,315,
        316,5,100,0,0,316,317,5,32,0,0,317,318,5,112,0,0,318,319,5,101,0,
        0,319,320,5,114,0,0,320,321,5,112,0,0,321,322,5,101,0,0,322,323,
        5,110,0,0,323,324,5,100,0,0,324,325,5,105,0,0,325,326,5,99,0,0,326,
        327,5,117,0,0,327,328,5,108,0,0,328,329,5,117,0,0,329,330,5,109,
        0,0,330,331,1,0,0,0,331,332,3,39,19,0,332,46,1,0,0,0,333,334,3,37,
        18,0,334,335,5,58,0,0,335,336,5,99,0,0,336,337,5,111,0,0,337,338,
        5,108,0,0,338,339,5,117,0,0,339,340,5,109,0,0,340,341,5,110,0,0,
        341,342,5,97,0,0,342,343,1,0,0,0,343,345,3,29,14,0,344,346,7,6,0,
        0,345,344,1,0,0,0,346,347,1,0,0,0,347,345,1,0,0,0,347,348,1,0,0,
        0,348,349,1,0,0,0,349,350,3,39,19,0,350,48,1,0,0,0,17,0,143,200,
        203,208,213,219,224,230,241,247,258,261,268,279,290,347,0
    ]

class EDRLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    L_PAREN = 1
    R_PAREN = 2
    L_BRACKET = 3
    R_BRACKET = 4
    L_CURLY = 5
    R_CURLY = 6
    COLON = 7
    QUESTION = 8
    DASH = 9
    PLUS = 10
    UNDERLINE = 11
    CIRCUMFLEX = 12
    DOT = 13
    LETTER = 14
    SPACE = 15
    NEWLINE = 16
    PUNCT = 17
    NUM = 18
    L_ANGLE = 19
    R_ANGLE = 20
    VACAT = 21
    IANUA = 22
    PERPENDICULUM = 23
    COLUMN = 24

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "'['", "']'", "'{'", "'}'", "':'", "'?'", "'-'", 
            "'+'", "'&#818;'", "'&#770;'", "'&#803;'" ]

    symbolicNames = [ "<INVALID>",
            "L_PAREN", "R_PAREN", "L_BRACKET", "R_BRACKET", "L_CURLY", "R_CURLY", 
            "COLON", "QUESTION", "DASH", "PLUS", "UNDERLINE", "CIRCUMFLEX", 
            "DOT", "LETTER", "SPACE", "NEWLINE", "PUNCT", "NUM", "L_ANGLE", 
            "R_ANGLE", "VACAT", "IANUA", "PERPENDICULUM", "COLUMN" ]

    ruleNames = [ "L_PAREN", "R_PAREN", "L_BRACKET", "R_BRACKET", "L_CURLY", 
                  "R_CURLY", "COLON", "QUESTION", "DASH", "PLUS", "UNDERLINE", 
                  "CIRCUMFLEX", "DOT", "LETTER", "SPACE", "NEWLINE", "PUNCT", 
                  "NUM", "L_ANGLE", "R_ANGLE", "VACAT", "IANUA", "PERPENDICULUM", 
                  "COLUMN" ]

    grammarFileName = "EDR.g"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.12.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


