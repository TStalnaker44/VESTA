# Generated from EDR.g by ANTLR 4.12.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,14,83,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,
        7,13,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,
        1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,
        1,10,1,11,4,11,63,8,11,11,11,12,11,64,1,12,4,12,68,8,12,11,12,12,
        12,69,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,3,12,80,8,12,1,13,
        1,13,0,0,14,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,
        23,12,25,13,27,14,1,0,4,2,0,65,90,97,122,2,0,9,9,32,32,2,0,10,10,
        13,13,2,0,44,44,46,46,86,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,
        1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,
        1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,
        1,0,0,0,1,29,1,0,0,0,3,31,1,0,0,0,5,33,1,0,0,0,7,35,1,0,0,0,9,37,
        1,0,0,0,11,39,1,0,0,0,13,41,1,0,0,0,15,43,1,0,0,0,17,50,1,0,0,0,
        19,52,1,0,0,0,21,59,1,0,0,0,23,62,1,0,0,0,25,79,1,0,0,0,27,81,1,
        0,0,0,29,30,5,40,0,0,30,2,1,0,0,0,31,32,5,41,0,0,32,4,1,0,0,0,33,
        34,5,91,0,0,34,6,1,0,0,0,35,36,5,93,0,0,36,8,1,0,0,0,37,38,5,58,
        0,0,38,10,1,0,0,0,39,40,5,63,0,0,40,12,1,0,0,0,41,42,5,45,0,0,42,
        14,1,0,0,0,43,44,5,38,0,0,44,45,5,35,0,0,45,46,5,56,0,0,46,47,5,
        49,0,0,47,48,5,56,0,0,48,49,5,59,0,0,49,16,1,0,0,0,50,51,5,770,0,
        0,51,18,1,0,0,0,52,53,5,38,0,0,53,54,5,35,0,0,54,55,5,56,0,0,55,
        56,5,48,0,0,56,57,5,51,0,0,57,58,5,59,0,0,58,20,1,0,0,0,59,60,7,
        0,0,0,60,22,1,0,0,0,61,63,7,1,0,0,62,61,1,0,0,0,63,64,1,0,0,0,64,
        62,1,0,0,0,64,65,1,0,0,0,65,24,1,0,0,0,66,68,7,2,0,0,67,66,1,0,0,
        0,68,69,1,0,0,0,69,67,1,0,0,0,69,70,1,0,0,0,70,80,1,0,0,0,71,72,
        5,60,0,0,72,73,5,66,0,0,73,74,5,82,0,0,74,80,5,62,0,0,75,76,5,60,
        0,0,76,77,5,98,0,0,77,78,5,114,0,0,78,80,5,62,0,0,79,67,1,0,0,0,
        79,71,1,0,0,0,79,75,1,0,0,0,80,26,1,0,0,0,81,82,7,3,0,0,82,28,1,
        0,0,0,4,0,64,69,79,0
    ]

class EDRLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    L_PAREN = 1
    R_PAREN = 2
    L_BRACKET = 3
    R_BRACKET = 4
    COLON = 5
    QUESTION = 6
    DASH = 7
    UNDERLINE = 8
    CIRUMFLEX = 9
    DOT = 10
    LETTER = 11
    SPACE = 12
    NEWLINE = 13
    PUNCT = 14

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "'['", "']'", "':'", "'?'", "'-'", "'&#818;'", 
            "'\\u0302'", "'&#803;'" ]

    symbolicNames = [ "<INVALID>",
            "L_PAREN", "R_PAREN", "L_BRACKET", "R_BRACKET", "COLON", "QUESTION", 
            "DASH", "UNDERLINE", "CIRUMFLEX", "DOT", "LETTER", "SPACE", 
            "NEWLINE", "PUNCT" ]

    ruleNames = [ "L_PAREN", "R_PAREN", "L_BRACKET", "R_BRACKET", "COLON", 
                  "QUESTION", "DASH", "UNDERLINE", "CIRUMFLEX", "DOT", "LETTER", 
                  "SPACE", "NEWLINE", "PUNCT" ]

    grammarFileName = "EDR.g"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.12.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


